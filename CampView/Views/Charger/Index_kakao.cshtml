@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_LayoutCharger";
}

@section Scripts
{
<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=c2bdeb4cb65fafc3e14f4cb0a12f344f&libraries=services"></script>
}





    
    


<script type="text/javascript">


    var map;
    var geocoder;
    var markers=[];
    var infoWindows = [];
    var dataList = [];
    

    var center = {
        x: 0,
        y: 0
    };

    $(document).ready(function () {
        mapSet();

    });

    function mapSet() {

        if(!navigator.geolocation) {
            alert('Geolocation is not supported by your browser');
        }
        else
        {
            mapInit();
        }
    }

    function resetMap() {
        
        markers=[];
        infoWindows = [];
        dataList = [];
        //console.log("mapInit");
	}

   
    function mapInit() {

        map = null;
        markers=[];
        infoWindows = [];
        dataList = [];
        //console.log("mapInit");

        navigator.geolocation.getCurrentPosition(function (position) {
            setMap(position.coords.latitude, position.coords.longitude);

            search();

            }
            , function (error) {
                console.log(error);
            });

        
	}
    

    function setMap(lat, lng) {

        var container = document.getElementById('divMap'); //지도를 담을 영역의 DOM 레퍼런스
        var options = { //지도를 생성할 때 필요한 기본 옵션
	        center: new kakao.maps.LatLng(lat, lng), //지도의 중심좌표.
	        level: 4 //지도의 레벨(확대, 축소 정도)
        };

        map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴

        // 주소-좌표 변환 객체를 생성합니다
        geocoder = new kakao.maps.services.Geocoder();

        // 마우스 드래그로 지도 이동이 완료되었을 때 마지막 파라미터로 넘어온 함수를 호출하도록 이벤트를 등록합니다
        kakao.maps.event.addListener(map, 'dragend', function() {        
    
            // 지도 중심좌표를 얻어옵니다 
            var latlng = map.getCenter(); 
    
            var message = '중심좌표 : ' + latlng.getLat() + ', '+ latlng.getLng();
            
            console.log("mouseEvent dragend");
            
            //console.log(mouseEvent.latLng);

            //var resultDiv = document.getElementById('result');  
            //resultDiv.innerHTML = message;

            // 현재 지도 중심좌표로 주소를 검색해서 지도 좌측 상단에 표시합니다
            //searchAddrFromCoords(map.getCenter(), displayCenterInfo);
            //console.log(geocoder)

            search();
    
        });


        kakao.maps.event.addListener(map, 'click', function (mouseEvent) {

            // 클릭한 위도, 경도 정보를 가져옵니다 
            var latlng = mouseEvent.latLng;

            console.log("mouse click");
            console.log(mouseEvent);
            console.log(mouseEvent.latLng);


        });
        kakao.maps.event.addListener(map, 'mousemove', function(mouseEvent) {
            // do something

            console.log("mousemove");
            console.log(mouseEvent);
            console.log(mouseEvent.latLng);
        });

    }


    function searchDetailAddrFromCoords(coords, callback) {

        //console.log(coords);
        // 좌표로 법정동 상세 주소 정보를 요청합니다
        geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);
    }

    function hideMarker() {

        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(null);
            infoWindows[i].close();
        }

        markers = [];
        infoWindows = [];
	}

    function search() {

        hideMarker();

        var latlng = map.getCenter();
        console.log(latlng);

        searchDetailAddrFromCoords(latlng, function (result, status)
        {
            if (status === kakao.maps.services.Status.OK) {
                var detailAddr = !!result[0].road_address ? '<div>도로명주소 : ' + result[0].road_address.address_name + '</div>' : '';
                detailAddr += '<div>지번 주소 : ' + result[0].address.address_name + '</div>';
            
                var content = '<div class="bAddr">' +
                                '<span class="title">법정동 주소정보</span>' + 
                                detailAddr + 
                            '</div>';

                // 마커를 클릭한 위치에 표시합니다 
                //marker.setPosition(mouseEvent.latLng);
                //marker.setMap(map);

                // 인포윈도우에 클릭한 위치에 대한 법정동 상세 주소정보를 표시합니다
                //infowindow.setContent(content);
                //infowindow.open(map, marker);

                console.log(content);

                $("#depth1").val(result[0].address.region_1depth_name);
                $("#depth2").val(result[0].address.region_2depth_name);
                $("#depth3").val(result[0].address.region_3depth_name);

                ajax(latlng);
            }
        });

    }

    function ajax(latlng) {
        var url = "/Charger/Search";

        var data = {
            "depth1": $("#depth1").val(),
            "depth2": $("#depth2").val(),
            "depth3": $("#depth3").val(),
            "lat": latlng.getLat(),
            "lng": latlng.getLng(),
        };

        //$("#divCampList").empty();
        var list = "";
        console.log("azax... request")
        $.ajax({
            type: "post",
            url: "/charger/Search",
            url: url ,
            data: data,
            async:false,
            success: function (data) {
                //script = data.replace(/<script>(.*)<\/script>/, "$1"); // Remove tags
                //eval(script); // Execute javascript
                console.log(data);

                if (data.item.length > 0) {

                    dataList = data;

                    for (var i = 0; i < data.item.length; i++) {

                        var lng = data.item[i].lng;
                        var lat = data.item[i].lat;

                        setMarker(lat, lng, data.item[i].statNm, i);
                    }

                }

            },
            error: function (data) {
                //alert("error: " + data.responseText);
            }
        });
	}


    function closeInfo(seq) {
        infoWindows[seq].close();
	}

    function setMarker(lat, lng, facltNm, seq) {

        var marker = new kakao.maps.Marker({
            position: new kakao.maps.LatLng(lat, lng),
            map: map,
            /*
            icon: {
                url: '/img/camp_icon.png',
                size: new naver.maps.Size(22, 35)
                
            }
            */
        });

        markers.push(marker);
        
        var infoWindow = new kakao.maps.InfoWindow({
            position: new kakao.maps.LatLng(lat, lng),
            removable :true,
            content: '<div style="width:250px;text-align:left;padding:10px;" onclick="closeInfo(' + seq + ')"> <b>' + facltNm + '</b></div>'
        });

        infoWindows.push(infoWindow);
        
        markers[seq].setMap(map);
        kakao.maps.event.addListener(markers[seq], 'click', getClickHandler(seq));

    }

    function getClickHandler(seq) {

        return function (e) {

            getClickListItem(seq);
            
        }
    }


    function getClickListItem(seq) {

        var marker = markers[seq],
        infoWindow = infoWindows[seq];

        if (infoWindow.getMap()) {
            infoWindow.close();
        } else {
            infoWindow.open(map, marker);
        }

        //setCampDetail(seq);
    }








</script>

<input type="hidden" name="depth1" id="depth1" value=""/>
<input type="hidden" name="depth2" id="depth2" value=""/>
<input type="hidden" name="depth3" id="depth3" value=""/>

<div id="divMap" style="width:100%;height:250px;"></div>