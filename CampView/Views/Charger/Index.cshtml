@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{

    var userId = ViewBag.UserId;

    Layout = "_LayoutCharger";
}

@section Scripts
{
<script src="https://cdn.jsdelivr.net/npm/clipboard@2.0.10/dist/clipboard.min.js"></script>
<script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ak5szsi1xk&callback=mapSet&submodules=geocoder"></script>
}


<style type="text/css">

	.gridcontainer {
		display: grid;
		grid-template-columns: 120px 270px;
		grid-template-rows: 60px 30px 30px 30px 30px 30px;
	}

	.gridtitle {
        font-weight:bold;
        text-align:left;
        margin:0 10px 0 15px;
	}


	.gridmain {
		display: grid;
		grid-template-columns: 260px 130px;
		grid-template-rows: 30px 20px;
		margin-bottom: 8px;
		background-color: #d9edf7;
        padding:10px 0 10px 10px;
        cursor:pointer;
	}

	.gridmain_addr {
		font-weight:bold;
		
	}

	.gridmain_avail{
        font-weight:bold;
	}


	.gridcomment {
		display: grid;
		grid-template-columns: 300px 100px;
		grid-template-rows: 50px;
	}
    /*
	.star_rating {
		font-size: 0;
		letter-spacing: -4px;
}
        */

	.star_rating a {
        font-size: 26px;
        letter-spacing: 0;
        display: inline-block;
        margin-left: 5px;
        text-decoration: none;
        color: #777;
        cursor:pointer;
	}

    .star_rating a:first-child {
	    margin-left: 0;
    }

    .star_rating a.on {
	    color: #facf00;
    }


	.star_rating_list a {
		font-size: 8px;
		letter-spacing: 0;
		display: inline-block;
		text-decoration: none;
		color: #777;
	}
		.star_rating_list a.on {
			color: #facf00;
		}

	#closeBtn {
		position: fixed;
		z-index: 99;
		left: 90%;
		top: 85%;
        display:none;
	}


</style>

<script type="text/javascript">


    var map;
    var geocoder;
    var markers=[];
    var infoWindows = [];
    var dataList = [];
    

    var center = {
        x: 0,
        y: 0
    };

    $(document).ready(function () {
        mapSet();

        getCommentsMain();

        favorList();

    });

    function mapSet() {

        if(!navigator.geolocation) {
            alert('Geolocation is not supported by your browser');
        }
        else
        {
            mapInit();
        }
    }

    function resetMap() {
        
        markers=[];
        infoWindows = [];
        dataList = [];
        //console.log("mapInit");
	}

   
    function mapInit() {

        map = null;
        markers=[];
        infoWindows = [];
        dataList = [];
        //console.log("mapInit");

        navigator.geolocation.getCurrentPosition(function (position) {
            setMap(position.coords.latitude, position.coords.longitude);

            center.x = position.coords.longitude;
            center.y = position.coords.latitude;
            console.log("init");
            //console.log(position);

            
            var latlng = map.getCenter(); 
            console.log(center);
            console.log(latlng);
            search(latlng);

            }
            , function (error) {
                console.log(error);
            });
	}
    

    function setMap(lat, lng) {

        var mapOptions = {
            center: new naver.maps.LatLng(lat, lng),
            zoom: 15,
            //scaleControl: false,
            logoControl: false,
            //mapDataControl: false,
            //zoomControl: false,
        };

        //console.log(mapOptions);

        map = new naver.maps.Map('divMap', mapOptions);
        // 주소-좌표 변환 객체를 생성합니다
        //geocoder = new naver.maps.services.Geocoder();

        // 마우스 드래그로 지도 이동이 완료되었을 때 마지막 파라미터로 넘어온 함수를 호출하도록 이벤트를 등록합니다
        naver.maps.Event.addListener(map, 'dragend', function(event) {        
    
            // 지도 중심좌표를 얻어옵니다 
            var latlng = map.getCenter(); 
    
            //var message = '중심좌표 : ' + latlng.getLat() + ', '+ latlng.getLng();
            
            //console.log("mouseEvent dragend");
            //console.log(event);

            //var resultDiv = document.getElementById('result');  
            //resultDiv.innerHTML = message;

             //searchCoordinateToAddress(event.coord);


            search(latlng);
    
        });


        naver.maps.Event.addListener(map, 'click', function (event) {
            // 클릭한 위도, 경도 정보를 가져옵니다 
            console.log("mouse click");
            console.log(event);

            search(event.coord);

        });


    }


    function searchCoordinateToAddress(latlng) {

        naver.maps.Service.reverseGeocode({
            coords: latlng,
            orders: [
                naver.maps.Service.OrderType.ADDR,
                naver.maps.Service.OrderType.ROAD_ADDR
            ].join(',')
            }, function (status, response)
            {
                if (status === naver.maps.Service.Status.ERROR)
                {
                    if (!latlng) {
                        return alert('ReverseGeocode Error, Please check latlng');
                    }
                    if (latlng.toString) {
                        return alert('ReverseGeocode Error, latlng:' + latlng.toString());
                    }
                    if (latlng.x && latlng.y) {
                        return alert('ReverseGeocode Error, x:' + latlng.x + ', y:' + latlng.y);
                    }

                    return alert('ReverseGeocode Error, Please check latlng');
                }

                console.log(response);
                /*
                var address = response.v2.address,
                    htmlAddresses = [];

                if (address.jibunAddress !== '') {
                    htmlAddresses.push('[지번 주소] ' + address.jibunAddress);
                }

                if (address.roadAddress !== '') {
                    htmlAddresses.push('[도로명 주소] ' + address.roadAddress);
                }
                */
                /*
            infoWindow.setContent([
                '<div style="padding:10px;min-width:200px;line-height:150%;">',
                '<h4 style="margin-top:5px;">검색 좌표</h4><br />',
                htmlAddresses.join('<br />'),
                '</div>'
            ].join('\n'));

            */

            //infoWindow.open(map, latlng);
        });
    }




    function hideMarker() {

        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(null);
            infoWindows[i].close();
        }

        markers = [];
        infoWindows = [];
	}

    function search(latlng) {

        hideMarker();

        naver.maps.Service.reverseGeocode({
            coords: latlng,
            orders: [
                naver.maps.Service.OrderType.ADDR,
                naver.maps.Service.OrderType.ROAD_ADDR
            ].join(',')
            }, function (status, response)
            {
                if (status === naver.maps.Service.Status.ERROR)
                {
                    if (!latlng) {
                        return alert('ReverseGeocode Error, Please check latlng');
                    }
                    if (latlng.toString) {
                        return alert('ReverseGeocode Error, latlng:' + latlng.toString());
                    }
                    if (latlng.x && latlng.y) {
                        return alert('ReverseGeocode Error, x:' + latlng.x + ', y:' + latlng.y);
                    }

                    return alert('ReverseGeocode Error, Please check latlng');
                }

                
                var result = response.v2.results;
                var address = response.v2.address;
                var htmlAddresses = [];

                if (address.jibunAddress !== '') {
                    htmlAddresses.push('[지번 주소] ' + address.jibunAddress);
                }

                if (address.roadAddress !== '') {
                    htmlAddresses.push('[도로명 주소] ' + address.roadAddress);
                }

                //console.log(response.v2.results);
                //console.log(htmlAddresses[0]);

                $("#depth1").val(result[0].region.area1.name);
                if (result[0].region.area2.name == '') {
                    $("#depth2").val(result[0].region.area3.name);
                    $("#depth3").val("");
                }
                else {
                    $("#depth2").val(result[0].region.area2.name);
                    $("#depth3").val(result[0].region.area3.name);
				}

                ajax(latlng);
            });
    }


    function worker(urls) {
        
        var worker = new Worker('/script/worker_charger.js');
        
        worker.postMessage(urls);  // 워커에 메시지를 보낸다.



        worker.onmessage = function (e) {
            console.log(e.data);
		}

	}


    function ajax(latlng) {

        var req = {
            "depth1": $("#depth1").val(),
            "depth2": $("#depth2").val(),
            "depth3": $("#depth3").val(),
            "lat": latlng.y,
            "lng": latlng.x,
        };

        //$("#divCampList").empty();
        
        console.log("azax... request")
        showDiv();

        $.ajax({
            type: "post",
            url: "/charger/search",
            data: req,
            async:false,
            success: function (data) {
                //script = data.replace(/<script>(.*)<\/script>/, "$1"); // Remove tags
                //eval(script); // Execute javascript
                //console.log(data);

                if (data.length > 0) {

                    dataList = data;

                    for (var i = 0; i < data.length; i++) {

                        var lng = data[i].lng;
                        var lat = data[i].lat;

                        setMarker(lat, lng, data[i].statNm, i, data[i].avail);
                    }
                }
            },
            error: function (data) {
                //alert("error: " + data.responseText);
                closeDiv("light");
            },
            complete: function () {
                closeDiv("light");
			}
        });

        var data = {
            "url": "/charger/Status",
            "req" : req
        };
    }

    


    function closeInfo(seq) {
        infoWindows[seq].close();
	}

    function setMarker(lat, lng, facltNm, seq, avail) {

        var iconUrl = "";
        if (avail =="Y") {
            //iconUrl += '<span class="glyphicon glyphicon-map-marker" aria-hidden="true" style="color:#31b0d5;"></span>';
            iconUrl = '/img/icon/icons8-charger_avail.png';
        } 
        else if (avail =="X"){
            //iconUrl += '<span class="glyphicon glyphicon-map-marker" aria-hidden="true" style="color:#c9302c;"></span>';
            iconUrl = '/img/icon/icons8-charger_not.png';
        }
        else{
            //iconUrl += '<span class="glyphicon glyphicon-map-marker" aria-hidden="true" style="color:#777;"></span>';
            iconUrl = '/img/icon/icons8-charger_not.png';
        }

        var marker = new naver.maps.Marker({
            position: new naver.maps.LatLng(lat, lng),
            map: map,

            icon: {
                url: iconUrl,
                size: new naver.maps.Size(28, 32),
                //content: iconUrl,
                //anchor: new naver.maps.Point(19, 58),
            }
        });

        markers.push(marker);
        
        var infoWindow = new naver.maps.InfoWindow({
            content: '<div style="width:250px;text-align:center;padding:10px;" onclick="closeInfo('+ seq +')"> <b>'+ facltNm +'</b></div>'
        });

        infoWindows.push(infoWindow);

        markers[seq].setMap(map);
        naver.maps.Event.addListener(markers[seq], 'mouseover', getClickHandler(seq, false));
        naver.maps.Event.addListener(markers[seq], 'mouseout', getClickHandler(seq, false));

        naver.maps.Event.addListener(markers[seq], 'click', getClickHandler(seq, true));

    }


    function addMarker(lat, lng, facltNm, seq, avail) {

        setMarker(lat, lng, facltNm, seq, avail) 
	}

    function getClickHandler(seq, isClick) {

        return function (e) {

            getClickListItem(seq, isClick);
            
        }
    }


    function getClickListItem(seq, isClick) {

        var marker = markers[seq],
        infoWindow = infoWindows[seq];

        if (isClick) {
            showDetail(seq);
        }
        else {
            
        }

        if (infoWindow.getMap()) {
            infoWindow.close();
        } else {
            infoWindow.open(map, marker);
        }
    }



    
    function showDetail(seq, data) {
        
        //map.setCenter(new naver.maps.LatLng(dataList[seq].lat, dataList[seq].lng));
        var html = "";
        $("#divChargeDtl").empty();

        $('#divChargeDtl').show();
        $('#closeBtn').show();

        var itemList;

        if (data != undefined) {
            itemList = data;
        }
        else {
            itemList = dataList[seq];
        }
        console.log("==detail");
        console.log(itemList);

        var title = "<p>■ <b>" + itemList.statNm + "</b>";
        title += '<img id="btnLike" src="/img/icon/icons8-heart-50.png" data-value="false" alt="favor it" style="margin-left:15px;width:25px;" onclick="javascript:favor(\''+ itemList.statId +'\',\''+ itemList.chgr[0].zscode +'\');"/>';
        title += "</p>";


        title += "<div class='gridcontainer'>";

        title += "<div class='gridtitle' >- 주소</div><div><span id='address'  data-clipboard-text=\"" + itemList.addr + "\" > " + itemList.addr + "</span>";
        //title += " <button type='button' class='btn btn-default btn-xs' onclick='clipboard(\"address\");'>복사</button>"

        if (itemList.location != "" && itemList.location != "null" ) {
            title += "<br /> (" + itemList.location + ")"
        }
        title += "</div>"
        title += "<div class='gridtitle' >- 충전소 구분</div><div> " + itemList.kindNm + " " + itemList.kindDetailNm + "</div>";
        
        if (itemList.chgr.length > 0) {

            title += "<div class='gridtitle' >- 운영기관</div><div> " + itemList.chgr[0].busiNm + "&nbsp;&nbsp; ☎ <a href='tel:" + itemList.chgr[0].busiCall + "'>" + itemList.chgr[0].busiCall + "</a></div>";

            title += "<div class='gridtitle' >- 이용가능시간</div><div>" + itemList.chgr[0].useTime + "</div>";

            var parking = "<span style='color:red;'>있음</span>";
            if (itemList.chgr[0].parkingFree == "Y") {
                parking = "없음";
            }
            title += "<div class='gridtitle' >- 주차료</div><div>" + parking + "</div>";

            if (itemList.chgr[0].limitYn == "Y") {

                var limit = "제한";
                if (itemList.chgr[0].limitDetail != "") limit = itemList.chgr[0].limitDetail;

                title += "<div class='gridtitle' >- 이용자 제한</div><div><span style='color:red;'>" + limit + "</span></div>";
            }

            if (itemList.chgr[0].note != "") {
                title += "<div class='gridtitle' >- 충전소 안내</div><div>" + itemList.chgr[0].note + "</div>";
            }
        }

        title += "</div>"
        title += "<hr style='height:5px;'/>";


        var addcomm = "<p>■ <b>한줄평</b><p>";
        addcomm += '<div id="commentadd">'
        addcomm += '<p class="star_rating">';    
        addcomm += '  <a class="on">★</a>';
        addcomm += '  <a class="on">★</a>';
        addcomm += '  <a class="on">★</a>';
        addcomm += '  <a>★</a>';
        addcomm += '  <a>★</a>  평점을 선택해주세요.';
        addcomm += '</p>';

        addcomm += '<div class="input-group gridcomment">'
        addcomm += ' <div>'
        addcomm += '  <input type="text" name="comment" id="comment" class="form-control" placeholder="">'
        addcomm += ' </div>'
        addcomm += ' <div>'
        addcomm += '  <span class="input-group-btn">'
        addcomm += '   <button type="button" class="btn btn-success" onclick = "addComment('+ seq +');">등록 </button>'
        addcomm += ' </span>'
        addcomm += ' </div>'
        addcomm += '</div>'
        addcomm += '</div>'

        addcomm += '<div id="commentList" style="display:none;margin-bottom:15px;"></div>'
        addcomm += "<hr style='height:5px;'/>";


        // 충전기 정보
        var list = "<p>■ <b>충전기 정보</b><p>";
        list += '<table class="table table-condensed table-hover table-striped">';
        list += '<tr>';
        list += '<td><b>번호</b><td>';
        list += '<td><b>충전용량</b><td>';
        list += '<td><b>상태</b><td>';
        list += '<td><b>충전기 타입</b><td>';
        list += '<td><b>충전중 시작시간</b><td>';
        list += '</tr>';

        if (itemList.chgr.length > 0) {
            for (var i = 0; i < itemList.chgr.length; i++) {
                var stat = '';
                if (itemList.chgr[i].stat == "2")  stat = '<span class="label label-primary">충전대기</span>';
                else if (itemList.chgr[i].stat == "3") stat = '<span class="label label-success">충전중</span>';
                else if (itemList.chgr[i].stat == "4") stat = '<span class="label label-warning">운영중지</span>';
                else if (itemList.chgr[i].stat == "5") stat = '<span class="label label-danger">점검중</span>';
                else if (itemList.chgr[i].stat == "9") stat = '<span class="label label-default">상태미확인</span>';
                else if (itemList.chgr[i].stat == "1") stat = '<span class="label label-default">통신이상</span>';


                var type = '';
                if (itemList.chgr[i].chgerType == "01") type = 'DC차데모';
                else if (itemList.chgr[i].chgerType == "02") type = 'AC완속';
                else if (itemList.chgr[i].chgerType == "03") type = 'DC차데모, AC3상';
                else if (itemList.chgr[i].chgerType == "04") type = 'DC콤보';
                else if (itemList.chgr[i].chgerType == "05") type = 'DC차데모,DC콤보';
                else if (itemList.chgr[i].chgerType == "06") type = 'DC차데모,AC3상,DC콤보';
                else if (itemList.chgr[i].chgerType == "07") type = 'AC3상';


                list += '<tr>';
                list += '  <td>'+ itemList.chgr[i].chgerId +'<td>';
                list += '  <td>'+ (itemList.chgr[i].output == "" ? "-" : itemList.chgr[i].output + 'Kw' ) +'<td>';
                list += '  <td>'+ stat + '<td>';
                list += '  <td>'+ type +'<td>';
                list += '  <td>'+ (itemList.chgr[i].stat=="3" ? dtYmd(itemList.chgr[i].nowTsdt) : '-') +'<td>';
                list += '</tr>';
            }
        }
        
        list += '</table>';

        html = title +  list + addcomm ;

        $("#divChargeDtl").html(html);

        
        // 코멘트 리스트
        
        getCommentsDtl(itemList.statId);


        isFavor(itemList.statId);

        
        $("#divComment").hide();
    }


    function dtYmd(dt) {

        return dt.substr(0, 4) + "-" + dt.substr(4, 2) + "-" + dt.substr(6, 2) +" " +  dt.substr(8, 2) + ":" +  dt.substr(10, 2);

    }


    function getCommentsMain() {

        $.ajax({
            type: "post",
            url: "/charger/comments",
            data: "",
            success: function (data) {
                //script = data.replace(/<script>(.*)<\/script>/, "$1"); // Remove tags
                //eval(script); // Execute javascript
                console.log(data);

                var list = "<p>■ <b>최근 등록된 코멘트 </b></p>";
                list += '<table class="table table-condensed table-hover table-striped">';
                

                if (data!=null && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        list += '<tr style="cursor:pointer;" onclick="chargerDtl(\''+ data[i].statId +'\', \''+ data[i].zscode +'\');">';
                        //list += '  <td style="width:40px;">'+ data[i].star  +'</td>';
                        list += '  <td><b>'+ data[i].statNm + "</b><br>" + data[i].comment + '</td>';
                        list += '  <td style="width:100px;">' + data[i].date.substring(0, 10);

                        // 별점 노출
                        list += '<p class="star_rating_list">';    
                        for (var s = 1; s <= 5 ; s++) {
                            if (s <= data[i].star)
                                list += '  <a class="on">★</a>';
                            else
                                list += '  <a>★</a>';
                        }
                        list += '</p>';
                        list += '</td>';

                        list += '</tr>';
                    }
                }
        
                list += '</table>';

                $("#divComment").html(list);

            },
            error: function (data) {
                //alert("error: " + data.responseText);
            },
        });
    }


    function chargerDtl(statId, zscode) {
        //console.log(statId);
        //console.log(zscode);

        // 조회를 한 후에 충전소 디테일로 이동
         $.ajax({
            type: "post",
            url: "/charger/SearchDtl",
            data: "statId=" + statId + "&zscode="+ zscode,
            async:false,
            success: function (data) {
                //script = data.replace(/<script>(.*)<\/script>/, "$1"); // Remove tags
                //eval(script); // Execute javascript
                //console.log(data);

                if (data.length > 0) {
                    var lng = data[0].lng;
                    var lat = data[0].lat;

                    var seq = markers.length;

                    // 마커 등록 및 데이터 추가
                    addMarker(lat, lng, data[0].statNm, seq, data[0].avail);
                    dataList.push(data[0]);
                    // 지도 포커스 이동
                    map.setCenter(new naver.maps.LatLng(lat, lng));

                    showDetail(seq, data[0]);
                }
            }
        });
	}


    function getCommentsDtl(statId) {

        $("#commentadd").show();
        $("#commentList").hide();

        $.ajax({
            type: "post",
            url: "/charger/comments",
            data: "statId="+ statId,
            success: function (data) {
                //script = data.replace(/<script>(.*)<\/script>/, "$1"); // Remove tags
                //eval(script); // Execute javascript
                console.log(data);
                var list = '<table class="table table-condensed table-hover table-striped">';
                var isMe = false;
                if (data!=null && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        list += '<tr>';
                        //list += '  <td style="width:55px;">'+ data[i].user.substr(0,5) +'</td>';
                        //list += '  <td style="width:40px;">'+ data[i].star  +'</td>';
                        list += '  <td>';
                        list += data[i].comment;
                        if (data[i].me == true) {
                            isMe = true;
                            list += " <a href='javascript:delComment(\""+ statId +"\")'>&nbsp;&nbsp;<img src='/img/close_square.png' style='width:14px;'></a>";
                        }
                        list += '</td>';

                        list += '  <td style="width:100px;">' + data[i].date.substring(0, 10);
                         // 별점 노출
                        list += '<p class="star_rating_list">';    
                        for (var s = 1; s <= 5 ; s++) {
                            if (s <= data[i].star)
                                list += '  <a class="on">★</a>';
                            else
                                list += '  <a>★</a>';
                        }
                        list += '</p>';
                        list += '</td>';

                        list += '</tr>';
                    }
                }
        
                list += '</table>';

                $("#commentList").show();
                $("#commentList").html(list);
                console.log(isMe);
                if (isMe) {
                    $("#commentadd").hide();
                }

                $(".star_rating a").click(function () {
                    $(this).parent().children("a").removeClass("on");
                    $(this).addClass("on").prevAll("a").addClass("on");
                });
            },
            error: function (data) {
                //alert("error: " + data.responseText);
            },
        });
    }

    function addComment(seq) {

        if ("@userId" == "") {
            alert("로그인후 등록 가능합니다.");
            return;
        }


        var star = 0;

        $(".star_rating > a").each(function () {
            if ($(this).attr("class") == "on") star++;
        })


        $.ajax({
            type: "post",
            url: "/charger/CommentIns",
            data: "&star="+ star + "&statId=" + dataList[seq].statId + "&comment="+ $("#comment").val()+ "&statNm="+ dataList[seq].statNm + "&zscode="+ dataList[seq].chgr[0].zscode,
            success: function (data) {

                if (data != null) {
                   console.log(data);
                    if (data.result == "true") {
                        getCommentsDtl(dataList[seq].statId);
                    }
                    else {
                        
					}
                   
				}
            }
        });
    }


    function delComment(statId) {
        if ("@userId" == "") {
            alert("로그인후 가능합니다.");
            return;
        }


        $.ajax({
            type: "post",
            url: "/charger/CommentDel",
            data: "statId=" + statId ,
            success: function (data) {

                if (data != null) {
                   console.log(data);
                    if (data.result == "true") {
                        getCommentsDtl(statId);
                    }
                    else {
                        
					}
                   
				}
            }
        });
	}


    function favorList() {

        $.ajax({
            type: "post",
            url: "/charger/FavorList",
            data: "",
            success: function (data) {
                //script = data.replace(/<script>(.*)<\/script>/, "$1"); // Remove tags
                //eval(script); // Execute javascript
                console.log(data);

                var list = "<p>■ <b>즐겨찾기 충전소</b></p>";
                if (data != null && data.length > 0) {

                    for (var i = 0; i < data.length; i++) {
                        list += "<div class='gridmain' onclick='chargerDtl(\""+ data[i].statId +"\", \""+ data[i].zscode +"\");'>";
                        list += "   <div class='gridmain_addr'>"+ data[i].statNm +"</div><div>충전기전체 : "+ data[i].totalCnt +"개</div>";
                        list += "   <div>"+ data[i].addr +"</div><div>충전가능 <span class='gridmain_avail'>"+data[i].availCnt+"</span>개</div>";
                        list += "</div>";

                    }

                    $("#divFavorList").html(list);
				}
            },
            error: function (data) {
                //alert("error: " + data.responseText);
            },
        });

	}

    function favor(statid, zscode) {

        var likeVal = $("#btnLike").attr("data-value");
        // 현재 좋아요 이면 true, 아니면 false
        
        $.ajax({
            type: "post",
            url: "/charger/favor",
            data: "statid=" + statid +  "&zscode=" + zscode + "&isFavor="+ likeVal,
            success: function (data) {

                if (data != null) {
                    //console.log(data);

                    if (data.result == "True") {
                        // 등록 성공
                        //getComment(seq);

                        if (likeVal == "true") {
                                
                            $("#btnLike").attr("src", "/img/icon/icons8-heart-50.png")
                            $("#btnLike").attr("data-value", "false");
                        }
                        else {
                            $("#btnLike").attr("src", "/img/icon/icons8-heartfull-50.png")
                            $("#btnLike").attr("data-value", "true");
		                }
					}
				}
            }
        });
    }

    function isFavor(statId) {
        //
        
        $.ajax({
            type: "post",
            url: "/charger/IsFavor",
            data: "statId=" + statId,
            success: function (data) {

                if (data != null) {
                    if (data.result == "True") {
                        $("#btnLike").attr("src", "/img/icon/icons8-heartfull-50.png")
                        $("#btnLike").attr("data-value", "true");
					}
				}
            }
        });
	}


</script>

<input type="hidden" name="depth1" id="depth1" value=""/>
<input type="hidden" name="depth2" id="depth2" value=""/>
<input type="hidden" name="depth3" id="depth3" value=""/>

<div id="divMap" style="width:100%;height:250px;"></div>
<div style="text-align:right;"><a target="_blank" href="https://icons8.com/icon/39110/tesla-supercharger-pin"> icon</a> by <a target="_blank" href="https://icons8.com">Icons8</a></div>

<div id="fade" class="black_overlay" style="display:none;z-index:1000;height:417px;"></div>

<div id="divChargeDtl" style="margin-top: 25px;"></div>

<div id="divFavorList" style="margin-top: 25px;"></div>

<div id="divComment" style="margin-top:25px;width:100%;"></div>

<div id="divBottom" style="width:100%;height:100px;"></div>


<div id="closeBtn" style="text-align:right; vertical-align:text-top;">
	<a href="javascript:void(0)" onclick="showMain();">
		<img src="/img/close_square.png" style="width:40px;height:40px;" />
	</a>
</div>

    <script type="text/javascript">


        function showMain() {
            $('#closeBtn').hide();
            $('#divChargeDtl').hide();
            

            $('#divComment').show();
		}

	    /// 화면의 중앙에 레이어띄움
        function showDiv() {

            var maskHeight = $(document).height();
		    var maskWidth = $(window).width();

		    
            $('#fade').show();
            console.log("show~~");
	    }

	    function closeDiv(objId) {
		    $('#fade').hide();
		    console.log("hide~~");
	    }


    </script>